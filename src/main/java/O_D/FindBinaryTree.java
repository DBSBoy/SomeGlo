package O_D;

/**
 * 每个节点以一维数组（int[]）表示，所有节点信息构成二维数组（int[][]），二维数组的0位置存放根节点；
 * 表示单节点的一维数组中，0位置保存内容值，后续位置保存子节点在二维数组中的索引位置。
 * 对于上图中，根节点的可以表示为{10，1，2}，树的整体表示为
 * {{10,1,2},{-21,3,4},{23,5},{14},{35},{66}}
 * 查询条件以长度为2的一维数组表示，上图查询坐标为(1,1)时表示为
 * {1,1}
 *
 * 使用Java标准IO键盘输入进行录入时，先录入节点数量，然后逐行录入节点。最后录入查询的位置，对于上述示例为：
 *
 * 6
 * 10 1 2
 * -21 3 4
 * 23 5
 * 14
 * 35
 * 66
 * 1 1
 *
 * 输出
 *
 * {23}
 */
public class FindBinaryTree {
}
